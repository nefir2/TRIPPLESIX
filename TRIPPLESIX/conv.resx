<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAD///8AAgEAABgNAR0HAwCGAAAA2wMBAPsDAgD/AwIA/wMCAP8DAgD/AwIA/wMCAP8DAgD/AwIA/wMC
        AP8CAQD/AAAA/wEBAP8BAQH/AQEB/wEBAf8BAQH/AQEB/wEBAf8BAQH/AQEB/wEBAPsAAADbAgIBhgkI
        BR0BAQAA////AAIBAAANBwEvAgEAwR0SBP5oQA7/ll0U/6BiFf+gYhX/oGIV/6BiFf+gYhX/oGIV/6Bi
        Ff+gYhX/oWMV/41XE/8UDQP/KiYd/0M8Lv9COy3/Qjst/0I7Lf9COy3/Qjst/0I7Lf9BOy3/Pjgq/yom
        Hf8MCwj+AAAAwQQEAi8BAQAAGA0BHQIBAME7JAj/xXkb//SXIf/3mSL/95ki//eZIv/3mSL/95ki//eZ
        Iv/3mSL/95ki//eZIv/5miL/2oce/x8UBf9BOy7/Z11H/2ZcRv9mXEb/ZlxG/2ZcRv9mXEb/ZlxG/2Zc
        Rv9mXEb/ZFpF/1FJOP8YFhD/AAAAwQkIBR0HAwCGHRIE/sV5G//3mSL/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//WXIf/XhR3/HxMF/0A6Lf9mXEb/ZFpF/2RaRf9kWkX/ZFpF/2Ra
        Rf9kWkX/ZFpF/2RaRf9kWkX/ZlxG/1FJOP8MCwj+AgIBhgAAANtoQA7/9Jch//OWIf/0liH/9ZYg//WX
        IP/0liH/9Jch//WWH//1lyD/9Jch//WWH//0lyD/9Zch/9eFHf8fEwX/QDot/2ZcRv9kWkX/ZFpF/2Ra
        Rf9kWkX/ZFpF/2NZRP9lW0X/ZVtG/2RaRf9kWkX/ZVtF/yomHf8AAADbAwEA+5ZdFP/3mSL/9JYh/+WO
        If/KiTn/y4k3/+iPIP/fjCT/x4tB/8+KNf/aiSX/xok+/9mLKv/1lyH/14Ud/x8TBf9AOi3/Y1pF/19Y
        Sf9hV0T/X1dG/19XR/9eVUP/aGJU/2BZSf9eV0j/XVRD/19YSf9hWEX/Pjgq/wEBAPsDAgD/oGIV//iZ
        Iv/pkCD/uJZr/7qwpv+6sKX/sI1l/7GXef+8saT/rJmE/5d8Xv++ubX/t4JC//WWH//XhR3/HxMF/0A6
        Lf9kXEv/np2b/11WRv90cGb/iIeE/42MiP+amZj/f39+/3V1c/+Uk5D/kI+M/2BYR/9COy3/AQEB/wMC
        AP+gYhX/+Zoh/9CHLf+9ta3/yYxA/8eOR/+ysbD/s7O0/7aIT/+wdjD/pIhn/7iki//bhx//9pgh/9eF
        Hf8fEwX/QDot/2VdTP+8vLr/iYaA/6GgnP+ampr/vLy8/5CPjv+lpaX/bWtn/9DQ0P+Fgnv/YVdC/0I7
        Lf8BAQH/AwIA/6BiFf/5mSH/0Ycs/7y0rP/Ijkb/xpBO/7awqP+lj3b/u7Kn/6OVhv+gmI//xcC8/8GC
        Mv/3mCD/14Ud/x8TBf9AOi3/ZV1M/769vP+Qjoj/qKaj/5mXlP+Jh4L/np2d/5qZl/9/fn3/kI6K/5GQ
        jP9hWUj/Qjst/wEBAf8DAgD/oGIV//iZIv/rkSD/upNj/7qxp/+6sKf/vJFc/+CKIP/SjTX/1Ikq/6uH
        W/+ul33/3Yoj//aYIf/XhR3/HxMF/0A6Lf9kXEv/np2b/1xVRv90b2X/jIqE/1tSQP9qY1P/YFhH/2BZ
        Sf9eVkP/YVpK/2JZRv9COy3/AQEB/wMCAP+gYhX/95ki//SWIf/pkCD/z4gy/8+IMf/qkCD/9Zch//WX
        IP/1lyD/3Yoj/9eHJf/zliH/9Zch/9eFHf8fEwX/QDot/2NaRf9fWEn/YVdE/19XRv9fV0f/Y1lE/2Ra
        RP9kWkX/ZFpF/2RaRf9kWkX/ZlxG/0I7Lf8BAQH/AwIA/6BiFf/3mSL/85Yh//SWIf/1lyD/9Zcg//SW
        If/zliH/85Yh//OWIf/0lyH/9Zch//OWIf/1lyH/14Ud/x8TBf9AOi3/ZlxG/2RaRf9kWkX/ZFpF/2Ra
        Rf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9mXEb/Qjst/wEBAf8DAgD/oGIV//eZIv/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//WXIf/XhR3/HxMF/0A6Lf9mXEb/ZFpF/2Ra
        Rf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2ZcRv9COy3/AQEB/wMCAP+jZBb/+5si//eZ
        Iv/3mSL/95ki//eZIv/3mSL/95ki//eZIv/3mSL/95ki//eZIv/3mSL/+Zoi/9qHHv8fFAX/QTsu/2dd
        R/9mXEb/ZlxG/2ZcRv9mXEb/ZlxG/2ZcRv9mXEb/ZlxG/2ZcRv9mXEb/Z11H/0M8Lv8BAQH/AgEA/2lA
        Df+jYxX/oGIV/6BiFf+gYhX/oGIV/6BiFf+gYhX/oGIV/6BiFf+gYhX/oGIV/6BiFf+iYhX/jlYS/xQN
        A/8qJRz/Qzss/0I6K/9COiv/Qjor/0I6K/9COiv/Qjor/0I6K/9COiv/Qjor/0I6K/9DOyz/KyYc/wEB
        AP8AAAD/CA8G/w0YCv8MFwr/DBcK/wwXCv8MFwr/DBcK/wwXCv8MFwr/DBcK/wwXCv8MFwr/DBcK/w0X
        Cv8LFAn/AgMC/wEQFf8CGSD/Ahkf/wIZH/8CGR//Ahkf/wIZH/8CGR//Ahkf/wIZH/8CGR//Ahkf/wIZ
        IP8BEBT/AAAA/wECAf8uZiz/SJ5F/0ebQ/9Hm0P/R5tD/0ebQ/9Hm0P/R5tD/0ebQ/9Hm0P/R5tD/0eb
        Q/9Hm0P/R5xE/z+JPP8JFQv/A3CU/wau5P8Gq+D/Bqvg/war4P8Gq+D/Bqvg/war4P8Gq+D/Bqvg/war
        4P8Gq+D/Bq7k/wRwk/8AAgP/AQIB/zV0Mv9Ss07/UbBN/1GwTf9RsE3/UbBN/1GwTf9RsE3/UbBN/1Gw
        Tf9RsE3/UbBN/1GwTf9Rsk3/R5xE/woYDP8Ef6n/B8b//wfC//8Hwv//B8L//wfC//8Hwv//B8L//wfC
        //8Hwv//B8L//wfC//8Hxv//BYCo/wACA/8BAgH/NHMy/1GyTf9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1Cv
        TP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1GwTf9Hm0P/ChgM/wR+p/8HxP//B8H//wfB//8Hwf//B8H//wfB
        //8Hwf//B8H//wfB//8Hwf//B8H//wfE//8Ef6f/AAID/wECAf80czL/UbJN/1CvTP9QsEz/ULBM/1Cw
        TP9QsEz/ULBM/1CwTP9QsEz/UK9M/1CwTP9Qr0z/UbBN/0ebQ/8KGAz/BH6n/wfE//8Hwv//B8L//wfB
        //8Hwf//B8H//wfC//8Hwf//B8H//wfC//8Hwv//B8T//wR/p/8AAgP/AQIB/zRzMv9Rsk3/UK9M/06n
        Sv9PoUv/T6JM/0ymSf9NpEn/TKFJ/02jSv9OqEr/TaNJ/1CuTP9RsE3/R5tD/woYDP8Efqj/CMH+/wuy
        6v8Ms+r/Brr2/wbC//8IufT/DrPq/we8+f8Fvvv/DbPq/wm38f8HxP//BX+n/wACA/8BAgH/NHMy/1Gy
        Tf9Orkr/Z5ll/6y3rP+hr6H/hZ6E/3iOd/90hHP/fZd9/1mNV/+CnIH/TKVJ/1GxTf9Hm0P/ChgM/wN/
        qf8drt//k7G7/5Wwuf9tqr//HKDM/2ymuv+Jo6z/SpWu/0aduv+Ys7z/eaa1/xSw5P8EgKj/AAID/wEC
        Af80czL/UbJN/02sSf96o3j/q7Kr/3KJcf+vsa//mpua/4+Sj/+erJ7/Yo1g/6Oyov9Mokj/UbFN/0eb
        Q/8KGAz/An+p/ymx3v+yvMD/PZWy/5q6xf+RnJ//w8PE/4uQk/+TkpL/sLGx/1Ohuv83l7f/EbLo/wR/
        qP8AAgP/AQIB/zRzMv9Rsk3/Ta1J/3ijdv+/w7//oKug/5mimf+Kl4r/h4uH/7q9uv+jraP/m6+b/0yl
        SP9RsU3/R5tD/woYDP8Cf6n/KbHe/6i2u/8NoND/brDH/5+lp/+ssbT/l5ud/6Gtsf+Wp6z/irG//22f
        sf8WrN3/BICp/wACA/8BAgH/NHMy/1GyTf9NrUn/dqB1/7W5tf+UoZT/oqui/213bf9ifWH/X5Jd/22c
        bP9ZnFb/T65L/1GwTf9Hm0P/ChgM/wJ/qf8or9z/vsTG/3yotv+su8H/QaC//zCjyf9XpsH/I6bR/xun
        1v9ZqcT/QaXH/wu79f8Ef6j/AAID/wECAf80czL/UbJN/0+vS/9UmFL/dZ9z/3eidv9al1f/YJFe/1ma
        Vv9Nrkn/Ta5J/0+vS/9Qr0z/UbBN/0ebQ/8KGAz/A3+p/xSz6P9bqMH/Zq7G/zinzP8IufT/BcH//wO/
        /f8Fwv//BsL//wO//f8EwP//B8X//wR+pv8AAgP/AQIB+zFsL/9Rsk3/UK9M/0+vS/9NrUn/Ta1J/0+v
        S/9OrUr/T65L/1CvTP9Qr0z/UK9M/1CvTP9RsE3/R5tD/woYDP8Efqf/B8T//wS+/P8Dvvz/BMH//wfC
        //8Hwf//B8H//wfB//8Hwf//B8H//wfB//8HxP//BHed/wACA/sAAADbIkog/1CwTP9Qr0z/UK9M/1Cv
        TP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1GwTf9Hm0P/ChgM/wR+p/8HxP//B8H//wfB
        //8Hwf//B8H//wfB//8Hwf//B8H//wfB//8Hwf//B8H//wfC//8DUmz/AAAA2wEFAYYJFQn+QY49/1Gy
        Tf9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UK9M/1CvTP9Qr0z/UbBN/0ebQ/8KGAz/BH6n/wfE
        //8Hwf//B8H//wfB//8Hwf//B8H//wfB//8Hwf//B8H//wfB//8HxP//BpzO/wEXHv4ABQeGBREFHQAB
        AMETKxL/QY49/1CwTP9Rsk3/UbJN/1GyTf9Rsk3/UbJN/1GyTf9Rsk3/UbJN/1GyTf9Ss07/SJ1E/woY
        DP8EgKr/B8j//wfE//8HxP//B8T//wfE//8HxP//B8T//wfE//8HxP//B8L//waczv8CLz7/AAECwQAR
        GR0BAgEAAwgDLwABAMEJFQn+Ikog/zFsL/80czL/NHMy/zRzMv80czL/NHMy/zRzMv80czL/NHMy/zV0
        Mv8uZiz/Bw8I/wJTbv8Fgar/BH+n/wR/p/8Ef6f/BH+n/wR/p/8Ef6f/BH+n/wR3nf8DUmz/ARce/gAB
        AsEACQ0vAAICAP///wABAgEABREFHQEFAYYAAADbAQIB+wECAf8BAgH/AQIB/wECAf8BAgH/AQIB/wEC
        Af8BAgH/AQIB/wECAf8AAAD/AAEC/wACA/8AAgP/AAID/wACA/8AAgP/AAID/wACA/8AAgP/AAID+wAA
        ANsABQeGABEZHQACAgAA//8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>